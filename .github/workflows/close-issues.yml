name: 'Close Issues'

description: 'Closes Issues'

on:
  workflow_call:
    inputs:
      branches:  
        description: 'Regex for the branch this workflow should trigger on'
        required: true

jobs:
  workflow_call:
      using: "composite"
      runs-on: ubuntu-latest

      steps:
          # https://stackoverflow.com/questions/58033366/how-to-get-the-current-branch-within-github-actions
          - name: Extract branch name
            shell: bash
            run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
            id: extract_branch

          - name: Generate access token
            uses: tibdex/github-app-token@v2
            if: startsWith('${{ steps.extract_branch.outputs.branch}}', '${{ inputs.branches }}')
            id: generate-token
            with:
              app_id: ${{ secrets.AUTOMATION_APP_ID }}
              private_key: ${{ secrets.AUTOMATION_APP_PRIVATE_KEY }}

          - if: startsWith('${{ steps.extract_branch.outputs.branch}}', '${{ inputs.branches }}')
            uses: octokit/graphql-action@v2.x
            id: get-issues
            env:
              GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
            with:
              query: |
                query getLinkedIssues($owner: String!, $name: String!, $number: Int!) {
                  repository(owner: $owner, name: $name) {
                    pullRequest(number: $number) {
                      closingIssuesReferences(first: 100) {
                        nodes {
                          number
                          repository {
                            nameWithOwner
                          }
                        }
                      }
                    }
                  }
                }
              variables: |
                owner: ${{ github.repository_owner }}
                name: ${{ github.event.repository.name }}
                number: ${{ github.event.pull_request.number }}

          - name: Close issues
            if: startsWith('${{ steps.extract_branch.outputs.branch}}', '${{ inputs.branches }}')
            env:
              GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
            run: |
              issue_data="$(echo '${{ steps.get-issues.outputs.data }}' | jq -r '.repository.pullRequest.closingIssuesReferences.nodes[] | [.number,.repository.nameWithOwner] | @tsv')"
              echo "$issue_data" | grep -v "^$" | while read number nameWithOwner; do
                gh issue close "$number" -r "$nameWithOwner"
              done